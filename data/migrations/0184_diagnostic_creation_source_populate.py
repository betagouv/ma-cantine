# Generated by Django 5.0.7 on 2025-05-06 15:09

from django.db import migrations
from django.db.models import Q, Case, When, F, Value
from django.db.models.functions import Length


def populate_diagnostic_creation_source(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    # first set of rules
    diagnostic_qs = Diagnostic.objects.filter(Q(creation_source="") | Q(creation_source__isnull=True))
    diagnostic_qs.annotate(creation_mtm_source_length=Length("creation_mtm_source")).annotate(creation_source_annotated=Case(
        When(Q(creation_mtm_source_length__gt=0), then=Value("APP")),
        default=Value(None),
    )).update(
        creation_source=F("creation_source_annotated")
    )
    # second set of rules: HistoricalDiagnostic
    for diagnostic in diagnostic_qs.all():
        diagnostic_first_version = diagnostic.history.last()
        if not diagnostic.creation_source and diagnostic_first_version and diagnostic_first_version.history_type == "+":
            if diagnostic_first_version.history_change_reason is None:
                if diagnostic_first_version.history_user_id and diagnostic_first_version.history_user.is_staff:
                    diagnostic.creation_source = "ADMIN"
                    diagnostic.save(update_fields=["creation_source"])
            elif diagnostic_first_version.history_change_reason.startswith("Mass CSV import"):
                diagnostic.creation_source = "IMPORT"
                diagnostic.save(update_fields=["creation_source"])
            elif diagnostic_first_version.history_change_reason == "SessionAuthentication":
                diagnostic.creation_source = "APP"
                diagnostic.save(update_fields=["creation_source"])
            elif diagnostic_first_version.history_change_reason == "OAuth2Authentication":
                diagnostic.creation_source = "API"
                diagnostic.save(update_fields=["creation_source"])

def undo_populate_diagnostic_creation_source(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0183_canteen_creation_source_populate"),
    ]

    operations = [
        migrations.RunPython(populate_diagnostic_creation_source, undo_populate_diagnostic_creation_source)
    ]
