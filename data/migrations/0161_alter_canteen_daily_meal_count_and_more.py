# Generated by Django 5.0.8 on 2024-12-10 17:52

from decimal import Decimal

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0160_diagnostic_service_type_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="canteen",
            name="daily_meal_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="repas par jour",
            ),
        ),
        migrations.AlterField(
            model_name="canteen",
            name="satellite_canteens_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="nombre de cantines satellites dépendantes (si cuisine centrale)",
            ),
        ),
        migrations.AlterField(
            model_name="canteen",
            name="yearly_meal_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="repas par an (y compris livrés)",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="donation_quantity",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="quantité des denrées données kg/an",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_autres_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_bio_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Bio - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boissons_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_boulangerie_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_charcuterie_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_egalim_others_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) des autres achats EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_externality_performance_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) prenant en compte les coûts imputés aux externalités environnementales ou leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fair_trade_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Commerce équitable - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fish_egalim_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) poissons et produits aquatiques EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fish_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) poissons et produits aquatiques",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_fruits_et_legumes_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_label_aoc_igp",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label AOC/AOP/IGP",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_label_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label HVE",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_meat_poultry_egalim_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_meat_poultry_france_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_meat_poultry_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_pat_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits dans le cadre de Projects Alimentaires Territoriaux - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_de_la_mer_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_produits_laitiers_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_sustainable_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits SIQO (hors bio) - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_total_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="value_viandes_volailles_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcanteen",
            name="daily_meal_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="repas par jour",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcanteen",
            name="satellite_canteens_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="nombre de cantines satellites dépendantes (si cuisine centrale)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcanteen",
            name="yearly_meal_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="repas par an (y compris livrés)",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="donation_quantity",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="quantité des denrées données kg/an",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_autres_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Autres produits frais, surgelés et d’épicerie, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_bio_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Bio - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boissons_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boissons, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_boulangerie_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Boulangerie/Pâtisserie fraîches, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_charcuterie_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Charcuterie, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_egalim_others_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) des autres achats EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_externality_performance_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) prenant en compte les coûts imputés aux externalités environnementales ou leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fair_trade_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Commerce équitable - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fish_egalim_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) poissons et produits aquatiques EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fish_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) poissons et produits aquatiques",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_fruits_et_legumes_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Fruits et légumes frais et surgelés, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_label_aoc_igp",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label AOC/AOP/IGP",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_label_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label HVE",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_meat_poultry_egalim_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées EGAlim",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_meat_poultry_france_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_meat_poultry_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_pat_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits dans le cadre de Projects Alimentaires Territoriaux - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_de_la_mer_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits aquatiques frais et surgelés, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_produits_laitiers_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="BOF (Produits laitiers, beurre et œufs), Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_sustainable_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Produits SIQO (hors bio) - Valeur annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_total_ht",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Valeur totale annuelle HT",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_aocaop_igp_stg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, AOC / AOP / IGP / STG",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_bio",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Bio",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_commerce_equitable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Commerce équitable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_externalites",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_fermier",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Fermier",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_france",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Provenance France",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_hve",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Haute valeur environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_label_rouge",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Label rouge",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_local",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produit local",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_non_egalim",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, non-EGAlim.",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_peche_durable",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Pêche durable",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_performance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Produits acquis sur la base de leurs performances en matière environnementale",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_rup",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Région ultrapériphérique",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="value_viandes_volailles_short_distribution",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Viandes et volailles fraîches et surgelées, Circuit-court",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="leftovers_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="leftovers_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="leftovers_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="preparation_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="preparation_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="preparation_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="unserved_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="unserved_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="historicalwastemeasurement",
            name="unserved_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="purchase",
            name="price_ht",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=20,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="prix HT",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="leftovers_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="leftovers_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="leftovers_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="restes assiette - masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="preparation_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="preparation_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="preparation_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="préparation - masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="Masse totale (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="unserved_edible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="unserved_inedible_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse non-comestible (kg)",
            ),
        ),
        migrations.AlterField(
            model_name="wastemeasurement",
            name="unserved_total_mass",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=20,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                verbose_name="non-servi - masse totale (kg)",
            ),
        ),
    ]
