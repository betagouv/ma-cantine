# Generated by Django 5.1.10 on 2025-10-10 14:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0214_diagnostic_value_egalim_hors_bio_ht_agg_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="canteen",
            name="production_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("central", "Livreur des repas sans lieu de consommation"),
                    (
                        "central_serving",
                        "Livreur des repas qui accueille aussi des convives sur place",
                    ),
                    ("site", "Cantine qui produit les repas sur place"),
                    (
                        "site_cooked_elsewhere",
                        "Sert des repas préparés par une cuisine centrale (une petite partie peut être réalisée sur place entrée / dessert)",
                    ),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de production",
            ),
        ),
        migrations.AlterField(
            model_name="canteen",
            name="satellite_canteens_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="nombre de restaurants satellites dépendants (si cuisine centrale)",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="central_kitchen_diagnostic_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "APPRO",
                        "Ce diagnostic concerne les données d'approvisionnement de tous les restaurants satellites",
                    ),
                    (
                        "ALL",
                        "Ce diagnostic concerne toutes les données des restaurants satellites",
                    ),
                ],
                max_length=255,
                null=True,
                verbose_name="seulement pertinent pour les cuisines centrales : Quelles données sont déclarées par cette cuisine centrale ?",
            ),
        ),
        migrations.AlterField(
            model_name="diagnostic",
            name="teledeclaration_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "SATELLITE_WITHOUT_APPRO",
                        "Restaurant satellite dont les données d'appro sont déclarées par la cuisine centrale",
                    ),
                    (
                        "CENTRAL_APPRO",
                        "Cuisine centrale déclarant les données d'appro pour ses restaurants satellites",
                    ),
                    (
                        "CENTRAL_ALL",
                        "Cuisine centrale déclarant toutes les données EGalim pour ses restaurants satellites",
                    ),
                    ("SITE", "Cantine déclarant ses propres données"),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de télédéclaration",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcanteen",
            name="production_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("central", "Livreur des repas sans lieu de consommation"),
                    (
                        "central_serving",
                        "Livreur des repas qui accueille aussi des convives sur place",
                    ),
                    ("site", "Cantine qui produit les repas sur place"),
                    (
                        "site_cooked_elsewhere",
                        "Sert des repas préparés par une cuisine centrale (une petite partie peut être réalisée sur place entrée / dessert)",
                    ),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de production",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcanteen",
            name="satellite_canteens_count",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                verbose_name="nombre de restaurants satellites dépendants (si cuisine centrale)",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="central_kitchen_diagnostic_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "APPRO",
                        "Ce diagnostic concerne les données d'approvisionnement de tous les restaurants satellites",
                    ),
                    (
                        "ALL",
                        "Ce diagnostic concerne toutes les données des restaurants satellites",
                    ),
                ],
                max_length=255,
                null=True,
                verbose_name="seulement pertinent pour les cuisines centrales : Quelles données sont déclarées par cette cuisine centrale ?",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldiagnostic",
            name="teledeclaration_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "SATELLITE_WITHOUT_APPRO",
                        "Restaurant satellite dont les données d'appro sont déclarées par la cuisine centrale",
                    ),
                    (
                        "CENTRAL_APPRO",
                        "Cuisine centrale déclarant les données d'appro pour ses restaurants satellites",
                    ),
                    (
                        "CENTRAL_ALL",
                        "Cuisine centrale déclarant toutes les données EGalim pour ses restaurants satellites",
                    ),
                    ("SITE", "Cantine déclarant ses propres données"),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de télédéclaration",
            ),
        ),
        migrations.AlterField(
            model_name="historicalteledeclaration",
            name="teledeclaration_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "SATELLITE_WITHOUT_APPRO",
                        "Restaurant satellite dont les données d'appro sont déclarées par la cuisine centrale",
                    ),
                    (
                        "CENTRAL_APPRO",
                        "Cuisine centrale déclarant les données d'appro pour ses restaurants satellites",
                    ),
                    (
                        "CENTRAL_ALL",
                        "Cuisine centrale déclarant toutes les données EGalim pour ses restaurants satellites",
                    ),
                    ("SITE", "Cantine déclarant ses propres données"),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de télédéclaration",
            ),
        ),
        migrations.AlterField(
            model_name="importfailure",
            name="import_type",
            field=models.TextField(
                blank=True,
                choices=[
                    ("CANTEEN_ONLY", "Cantines seules"),
                    (
                        "CANTEEN_ONLY_OR_DIAGNOSTIC_SIMPLE",
                        "Cantines seules ou avec un diagnostic simple",
                    ),
                    ("DIAGNOSTIC_SIMPLE", "Diagnostic simple"),
                    ("DIAGNOSTIC_COMPLETE", "Cantines avec diagnostic complet"),
                    (
                        "CC_SIMPLE",
                        "Livreurs avec un diagnostic simple et leurs restaurants satellites",
                    ),
                    (
                        "CC_COMPLETE",
                        "Livreurs avec un diagnostic complet et leurs restaurants satellites",
                    ),
                    ("PURCHASE", "Achats"),
                ],
                null=True,
                verbose_name="type d'import",
            ),
        ),
        migrations.AlterField(
            model_name="teledeclaration",
            name="teledeclaration_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "SATELLITE_WITHOUT_APPRO",
                        "Restaurant satellite dont les données d'appro sont déclarées par la cuisine centrale",
                    ),
                    (
                        "CENTRAL_APPRO",
                        "Cuisine centrale déclarant les données d'appro pour ses restaurants satellites",
                    ),
                    (
                        "CENTRAL_ALL",
                        "Cuisine centrale déclarant toutes les données EGalim pour ses restaurants satellites",
                    ),
                    ("SITE", "Cantine déclarant ses propres données"),
                ],
                max_length=255,
                null=True,
                verbose_name="mode de télédéclaration",
            ),
        ),
    ]
