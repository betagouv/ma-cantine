# Generated by Django 5.1.10 on 2025-09-07 14:12

from django.db import migrations, models


def populate_diagnostic_teledeclaration_version(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Teledeclaration = apps.get_model("data", "Teledeclaration")
    for teledeclaration in Teledeclaration.objects.filter(status="SUBMITTED"):
        try:
            diagnostic = Diagnostic.objects.get(id=teledeclaration.diagnostic_id)
            teledeclaration_version = teledeclaration.declared_data.get("teledeclaration_version")
            if teledeclaration_version:
                diagnostic.teledeclaration_version = int(teledeclaration_version)
                diagnostic.save(update_fields=["teledeclaration_version"])
        except Diagnostic.DoesNotExist:
            continue


def undo_populate_diagnostic_teledeclaration_version(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Diagnostic.objects.all().update(teledeclaration_version=None)


class Migration(migrations.Migration):

    dependencies = [
        (
            "data",
            "0210_diagnostic_teledeclaration_version_historicaldiagnostic_teledeclaration_version_and_populate",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="diagnostic",
            name="teledeclaration_version",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="version de la télédéclaration"
            ),
        ),
        migrations.AddField(
            model_name="historicaldiagnostic",
            name="teledeclaration_version",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="version de la télédéclaration"
            ),
        ),
        migrations.RunPython(populate_diagnostic_teledeclaration_version, undo_populate_diagnostic_teledeclaration_version),
    ]
