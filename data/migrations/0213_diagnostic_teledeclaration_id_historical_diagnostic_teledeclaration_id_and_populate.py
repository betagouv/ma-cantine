# Generated by Django 5.1.10 on 2025-09-11 13:17

from django.db import migrations, models


def populate_diagnostic_teledeclaration_id(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Teledeclaration = apps.get_model("data", "Teledeclaration")
    for teledeclaration in Teledeclaration.objects.filter(status="SUBMITTED"):
        try:
            diagnostic = Diagnostic.objects.get(id=teledeclaration.diagnostic_id)
            teledeclaration_id = teledeclaration.id
            if teledeclaration_id:
                diagnostic.teledeclaration_id = teledeclaration_id
                diagnostic.save(update_fields=["teledeclaration_id"])
        except Diagnostic.DoesNotExist:
            continue


def undo_populate_diagnostic_teledeclaration_id(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Diagnostic.objects.all().update(teledeclaration_id=None)


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0212_alter_diagnostic_canteen_allow_null"),
    ]

    operations = [
        migrations.AddField(
            model_name="diagnostic",
            name="teledeclaration_id",
            field=models.IntegerField(
                blank=True,
                null=True,
                verbose_name="ancien identifiant de la télédéclaration (concerne la période 2021-2024)",
            ),
        ),
        migrations.AddField(
            model_name="historicaldiagnostic",
            name="teledeclaration_id",
            field=models.IntegerField(
                blank=True,
                null=True,
                verbose_name="ancien identifiant de la télédéclaration (concerne la période 2021-2024)",
            ),
        ),
        migrations.RunPython(populate_diagnostic_teledeclaration_id, undo_populate_diagnostic_teledeclaration_id),
    ]
