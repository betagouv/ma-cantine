# Generated by Django 5.1.10 on 2025-09-06 16:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def populate_diagnostic_applicant(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Teledeclaration = apps.get_model("data", "Teledeclaration")
    for teledeclaration in Teledeclaration.objects.filter(status="SUBMITTED"):
        try:
            diagnostic = Diagnostic.objects.get(id=teledeclaration.diagnostic_id)
            applicant = teledeclaration.applicant
            if applicant:
                diagnostic.applicant = applicant
                diagnostic.save(update_fields=["applicant"])
        except Diagnostic.DoesNotExist:
            continue


def undo_populate_diagnostic_applicant(apps, schema_editor):
    Diagnostic = apps.get_model("data", "Diagnostic")
    Diagnostic.objects.all().update(applicant=None)


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0209_remove_historicaldiagnostic_satellites_snapshot"),
    ]

    operations = [
        migrations.AddField(
            model_name="diagnostic",
            name="applicant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="déclarant",
            ),
        ),
        migrations.AddField(
            model_name="historicaldiagnostic",
            name="applicant",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="déclarant",
            ),
        ),
        migrations.RunPython(populate_diagnostic_applicant, undo_populate_diagnostic_applicant),
    ]
